
template<class T>
class slist{

private:
    typedef struct Node{
        T data;
        Node *next;

        Node(const T& d):data(d), next() {}
        Node(const Node& copyNode) : data(copyNode.data), next() {}

        private:
            Node& operator=(const Node&);
    };

    Node* head;
    Node* tail;

public:

    slist(): head(NULL), tail(NULL) {}
    void push_front(T d){
        Node *temp = new Node(d);
        temp->next=head;
        head=temp;
        if (head->next == NULL)
            tail=temp;
    }

    void push_back(T d){
        Node *temp = new Node(d);
        if (tail==NULL){
            head=temp;
        }
        temp->next=NULL;
        tail->next=temp;
        tail=temp;
    }


};
